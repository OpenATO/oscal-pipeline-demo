name: CI
on:
  push:
    branches:
      - main
      - develop
  pull_request: {}
jobs:

  # Representative of tests you would see in a real project
  application_test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install app dependencies
        run: pip install -r requirements.txt; npm ci
      - name: Start application container
        run: docker-compose up -d
      - name: Run Cypress tests
        run: npm run test
      - name: Run Python tests
        run: pytest
      - name: Shut down application container
        run: docker-compose down

  # Validate the current state of the OSCAL content before moving on to the assess stage
  oscal_validate:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          # must retrieve full history to get timestamp data
          fetch-depth: 0
      - name: Validate the profile
        id: validate-profile
        uses: ./.github/actions/oscal-validation
        with:
          model_type: profile
          file_path: .oscal/profile.yaml
      - name: Validate the resolved catalog
        id: validate-resolved-catalog
        uses: ./.github/actions/oscal-validation
        with:
          model_type: catalog
          file_path: .oscal/resolved-catalog.yaml
      - name: Validate the system-security-plan
        id: validate-system-security-plan
        uses: ./.github/actions/oscal-validation
        with:
          model_type: ssp
          file_path: .oscal/ssp.yaml
      - name: Validate the assessment plan
        id: validate-assessment-plan
        uses: ./.github/actions/oscal-validation
        with:
          model_type: ap
          file_path: .oscal/assessment-plan.yaml
      - name: Check if profile is newer then resolved catalog
        run: |
          function timestamp {
            git log -1 --pretty="format:%cd" --date=format:%Y%m%d%H%m%S $1
          }
          if [[ $(timestamp ./.oscal/profile.yaml) -gt $(timestamp ./.oscal/resolved-catalog.yaml) ]]; then
            echo "Profile Desync!"
            echo "profile_desync=true" >> $GITHUB_ENV
          fi
      - name: Warn the user that the profile is newer then the resolved catalog
        id: comment-step
        if: ${{ env.profile_desync == 'true' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: json
          script: |
            const body = "`resolved-catalog.yaml` is older then `profile.yaml` and must be regenerated using `oscal-cli profile resolve profile.yaml resolved-catalog.yaml`";
            return await github.rest.repos.createCommitComment({
              body,
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: '${{ github.event.pull_request.head.sha }}'
            });
            // TODO: Also create a PR comment if action was triggered by a PR

  # If tests and OSCAL validation passes, assess the current state of the application
  oscal_assess:
    runs-on: ubuntu-22.04
    needs:
      - oscal_validate
      - application_test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install app dependencies
        run: pip install -r requirements.txt; npm ci
      - name: Start application container
        run: docker-compose up -d
      - name: Sleep for a bit
        run: sleep 15
      - name: Assess the system
        id: assess
        uses: ./.github/actions/oscal-assess
        with:
          assessment_plan_path: .oscal/assessment-plan.yaml
          assessment_results_path: .oscal/assessment-results.yaml
      - name: Validate the generated assessment results
        id: validate-assessment-results
        # run even if the assessment fails
        if: success() || failure()
        uses: ./.github/actions/oscal-validation
        with:
          model_type: profile
          file_path: .oscal/assessment-results.yaml
      # TODO: create comment/artifact
      - name: Shut down application container
        run: docker-compose down
